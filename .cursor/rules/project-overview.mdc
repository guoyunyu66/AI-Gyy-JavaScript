---
description: 需要了解项目概况的时候，使用此规则
globs: 
alwaysApply: false
---
# AIGyy 项目概览

本项目是一个使用 Next.js、React、TypeScript、Prisma 构建的全栈应用，后端 API 可能使用 Hono。

## 关键技术

-   **前端:** Next.js (App Router)、React、TypeScript、Tailwind CSS、shadcn/ui
-   **后端:** Next.js API 路由或可能使用像 Hono 这样的专用后端框架、TypeScript
-   **数据库:** PostgreSQL (推测，通常与 Prisma 一起使用)、Prisma ORM
-   **身份验证:** 可能使用 Supabase Auth 或类似方案，通过 `src/contexts/auth-context.tsx` 和后端中间件管理。
-   **样式:** Tailwind CSS ([src/app/globals.css](mdc:src/app/globals.css))
-   **UI 组件:** `src/components` 中的可复用组件，可能使用 `shadcn/ui` ([src/components/ui/](mdc:src/components/ui))

##核心目录

-   `src/app`: Next.js 页面、布局和路由。
-   `src/components`: 共享 UI 组件。
-   `src/module`: 特定功能的模块 (例如聊天、仪表盘)。
-   `src/server`: 后端 API 端点和中间件。
-   `src/lib`: 共享工具、Prisma 客户端、Supabase 客户端。
-   `src/contexts`: 用于共享状态 (例如身份验证) 的 React 上下文。
-   `src/hooks`: 自定义 React 钩子。
-   `prisma`: 数据库模式和迁移。

## 开发工作流

-   在处理 `src/app`、`src/components` 或 `src/module` 时，请参考 `frontend-guidelines.mdc`。
-   在处理 `prisma`、`src/contexts`、`src/hooks`、`src/lib` 或 `src/server` 时，请参考 `backend-guidelines.mdc`。
-   保持代码质量，编写测试，并遵循既定模式。
